const Discord = require("discord.js");
const fs = require("fs");
const client = new Discord.Client();
let p = "tess!"


function emoji (id) {
return client.emojis.get(id).toString();
} 

client.on('ready', () => {
 
  client.user.setActivity('tess!help',{ type: "PLAYING" })
    client.user.setStatus('idle')
});
           
client.on('message', message => {
	if(message.content.startsWith(p + 'avatar')) {
try {
let mentions1 = message.mentions
		const embed = new Discord.RichEmbed()
		 .setTitle('–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
                 .setColor('RANDOM')
		 .setImage(message.mentions.users.first().avatarURL)
		 message.channel.send({embed})
		console.log(`–ø–æ–∫–∞–∑–∞–ª –∞–≤–∞—Ç–∞—Ä ${mentions1[0]} –¥–ª—è ${message.author.displayName} –≤ ${message.guild.name}`)
} catch (err) {
message.channel.send('–¢—ã —É–≤–µ—Ä–µ–Ω —á—Ç–æ —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫ –∏–º–µ–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É?')
		}
	}
});
	
client.on("messageDelete", (msg) => {	
  if (typeof msg.content !== 'undefined'){
  if (msg.author.bot) return;
  if (msg.author.id === "631041923280273438") return; //–ü—á—ë–ª–∫–∞
  if (msg.author.id === "407474888929181697") return; //–î–æ–∫—Ç–æ—Ä
  if (msg.author.id === "361572142644461570") return; //–ê–ª—è
  if (msg.author.id === "632228871307001885") return; //–ñ–µ–Ω—è
  if (msg.author.id === "405258156063850497") return; //–ß–∞—ë–∫
  if (msg.guild.id === "677783637634318365") { 	
    let date = new Date(msg.createdTimestamp);	
    let idmemb = msg.author.id;
    if (typeof msg.attachments[0] !== 'undefined'){    
	console.log('–ö–∏–Ω—É–ª –≤ –ª—Å —É–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')	
      client.channels.get("674482419415515146").send(`–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç` + "<@" + idmemb + ">" + ` –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ ${date.toUTCString()}: "${msg.content}" \n id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${msg.author.id}`);	
    } else {	
      client.channels.get("674482419415515146").send(`–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç` + "<@" + idmemb + ">" + ` –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ ${date.toUTCString()}: "${msg.content}" \n id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${msg.author.id}`);	
    };	
  } else {	
    client.channels.get("674482419415515146").send("–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.");	
  };	
 };
});

client.on('messageDelete', message => {
   if (message.attachments.size > 0) { 
        var Attachment = (message.attachments).array();
        message.attachments.forEach(function(attachment) {
            let embed = new Discord.RichEmbed()
             .setColor("#affaff")
             .setImage(attachment.proxyURL)         
            client.channels.get("674482419415515146").send(embed);
   })
 }
});

client.on('message', message => {
     msg = message.content.toLowerCase();
     if(message.author.bot) return;
     mention = message.mentions.users.first();
         if(msg.startsWith (p + "send")) {
           if (mention == null) { return; }
           message.delete();
           mentionMessage = message.content.slice (10);
           mention.sendMessage (mentionMessage);
 }
});

client.on('message', message => {
	if(message.content === (p + 'logo')) {
 try {
	const embed = new Discord.RichEmbed()
		.setTitle('–õ–æ–≥–æ—Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞')
            .setColor('RANDOM')
		.setImage(message.guild.iconURL)
		 message.channel.send({embed})
		console.log(`–ø–æ–∫–∞–∑–∞–ª –ª–æ–≥–æ—Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞ ${message.guild.name} –¥–ª—è ${message.author.displayName}`)
 } catch (err) {
message.channel.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∫—Ä–∞—à–Ω—É—Ç—å –±–æ—Ç–∞ :D')
		}
	}
});

client.on('message', message => {
    if(message.content.startsWith(p + 'afkon')) {
        let hex = message.content.split(" ");
        const embed = new Discord.RichEmbed()
            .setTitle("AFK")
            .setColor(hex[1])
            .setDescription('–í–æ—à(–µ)–ª(–∞) –≤ AFK,–Ω–µ –º–µ—à–∞–π—Ç–µ.')
            .setFooter("AFK|Tess bot")
            .setTimestamp();
            message.reply({embed}).then(sentMessage => {
                sentMessage.react('üîú')    
                    .catch(() => console.error('One of the emojis failed to react1.'));
            });
            }
});
 
    client.on('message', message => {
        if(message.content.startsWith(p + 'afkoff')) {
            let hex2 = message.content.split(" ")
            const embed = new Discord.RichEmbed()
                .setTitle("AFK")
                .setColor(hex2[1])
                .setDescription('–í—ã—à(–µ)–ª(–∞) –∏–∑ AFK,—Ç–µ–ø–µ—Ä—å –æ–Ω(–∞) —Å –Ω–∞–º–∏.')
                .setFooter("AFK|Tess bot")
                .setTimestamp();
                message.reply({embed}).then(sentMessage => {
                    sentMessage.react('üîô')
                });     
            }
        });

client.on('message', message => {
if(message.content.includes(p + "invitebot")) {
const embed = new Discord.RichEmbed()
            .setTitle("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")
            .setColor("#00BFFF")
            .setDescription('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n https://discordapp.com/api/oauth2/authorize?client_id=466896060682469377&permissions=8&scope=bot\n –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n https://discordapp.com/api/oauth2/authorize?client_id=466896060682469377&permissions=0&scope=bot')
            .setFooter("Tess bot")
            .setTimestamp();
    message.channel.send({embed})
    .catch(console.error)
}
  if(message.content.startsWith(p + "help")) {
   const helpembed = new Discord.RichEmbed()
    .setTitle("–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã")
    .setColor("#affaff")
    .setDescription(
     "**tess!logo** - —É–∫—Ä–∞—Å—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —Å–µ—Ä–≤–µ—Ä–∞\n" +
     "**tess!say {message}** - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞\n" +
     "**tess!clear {0-99}** - –æ—á–∏—Å—Ç–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π\n" +
     "**tess!invitebot** - –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –∫ —Å–µ–±–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n" +
     "**tess!afkon #hex** - –≤–æ–π—Ç–∏ –≤ –∞—Ñ–∫ —Ä–µ–∂–∏–º (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–∞–º–æ–º—É —Ü–≤–µ—Ç —ç–º–±–µ–¥–∞)\n" +
     "**tess!afkoff #hex** - –≤—ã–π—Ç–∏ –∏–∑ –∞—Ñ–∫ —Ä–µ–∂–∏–º–∞ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–∞–º–æ–º—É —Ü–≤–µ—Ç —ç–º–±–µ–¥–∞)\n" +
     "**tess!avatar {@user}** - —É–∫—Ä–∞—Å—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —á–µ–ª–æ–≤–µ–∫–∞\n" +
     "**tess!burn {@user}** - —Å–∂–µ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
     "***–°–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ –º–µ—Ä–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥***"
  )
    .setFooter("Help|TessBot")
    .setTimestamp()
    message.channel.send(helpembed)
   .catch(console.error)
 }
});

client.on('message', message => {
   if(message.content.startsWith(p + "say")) {
      message.delete();
      saymessage = message.content.slice (9)
      message.channel.send(saymessage)
      authormessage = message.author.username
      let sayschannel = client.channels.get("674482419415515146")
      sayschannel.send(authormessage + " –Ω–∞–ø–∏—Å–∞–ª –∫–æ–º–∞–Ω–¥–æ–π: " + saymessage)
      .catch(console.error)
}

mentionuser = message.mentions.users.first();
   if(message.content.startsWith(p + "burn")) {
     if (mentionuser == null) { return; }
     numberfire = 3
     fireNumber = Math.floor (Math.random() * (numberfire - 1 + 1))+1;
     firemember = message.author
     firedelay = message.content.slice (10)
     message.channel.send(firemember + " —Å–∂–µ–≥(—Å–æ–∂–≥–ª–∞) " + firedelay, { files: ["./images/burn/" + fireNumber + ".gif"]} )
}
  
   if(message.content.startsWith(p + "sex")) {
     if (mentionuser == null) { return; }
     if (message.channel.nsfw == false) { return message.channel.send("–†–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å nsfw") }

     hentairand = Math.floor(Math.random() * 2) + 1;
     if (hentairand == 1) {
     hentaiCount = 9
     hentaiNumber = Math.floor (Math.random() * (hentaiCount - 1 + 1))+1;
     hentaimember = message.author
     hentaidelay = message.content.slice (9)
     message.channel.send(hentaimember + " –æ—Ç—Ö–µ–Ω—Ç–∞–∏–ª(–∞) " + hentaidelay, { files: ["./images/hentai/" + hentaiNumber + ".gif"]} )
     .catch(console.error)
}

   if (hentairand == 2) {
     hentaiCount2 = 9
     hentaimember2 = message.author
     hentaiNumber2 = Math.floor (Math.random() * (hentaiCount2 - 1 + 1))+1;
     hentaidelay2 = message.content.slice (9)
     message.channel.send(hentaimember2 + " –æ—Ç—Ö–µ–Ω—Ç–∞–∏–ª(–∞) " + hentaidelay2, { files: ["./images/hentai2/" + hentaiNumber2 + ".gif"]} )
     .catch(console.error)
  }
 }

    if(message.content.startsWith(p + "clear")) {
      message.delete();
      delmsg = message.content.split(" ");     
     if(Boolean(Number(delmsg[1]))) {
   message.channel.bulkDelete(delmsg[1]).then(() => {
   message.channel.send("–£–¥–∞–ª–µ–Ω–æ " + delmsg[1] + " —Å–æ–æ–±—â–µ–Ω–∏–π").then(msg => msg.delete(1500));
  });
  } else {
   message.channel.send("–ß–∏—Å–ª–æ –º–Ω–µ, —á–∏—Å–ª–æ –¥–∞–≤–∞–π")
 }
}

   if(message.content.startsWith(p + "kick")) {
    message.delete()
    kickCount = 6
    kickNumber = Math.floor (Math.random() * (kickCount - 1 + 1))+1;
    let kickmem = message.content.slice(10).split("/")
    message.channel.send(kickmem[0] + " **—É–¥–∞—Ä–∏–ª** " + kickmem[1], { files: ["./images/kick/" + kickNumber + ".gif"]} )
    .catch(console.error)
 }
})

//–ó–û–ù–ê –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–û–í
client.on('message', message => {
 if(message.content.startsWith(p + "leave")) {
  let guildID = message.guild.id
  let leaveemb = new Discord.RichEmbed()
   .setTitle("–ü—Ä–æ—â–∞–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º")
   .setColor("#affaff")
   .setDescription("–£—á–∞—Å—Ç–Ω–∏–∫–∏ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ö–æ—á—É —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –º–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∏ —è —É—Ö–æ–∂—É, –≤—Å–µ–º –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è") 
  message.delete().then(() => {
   message.channel.send(leaveemb).then(() => {
   message.guild.leave(guildID)
   })
  })
 }
})
 
client.on("message", message => {
  const args = message.content.split(" ").slice(1);
  
  
 
  if (message.content.startsWith(p + "eval")) {
    try {
    function clean(text) {
  if (typeof(text) === "string")
    return text.replace(/`/g, "`" + String.fromCharCode(8203)).replace(/@/g, "@" + String.fromCharCode(8203));
  else
      return text;
}
      const code = args.join(" ");
      let evaled = eval(code);
 
      if (typeof evaled !== "string")
        evaled = require("util").inspect(evaled);
 
      message.channel.send(clean(evaled), {code:"xl"});
    } catch (err) {
      message.channel.send(`\`ERROR\` \`\`\`xl\n${clean(err)}\n\`\`\``);
    }
  }
});


client.login(process.env.BOT_SECRET);
