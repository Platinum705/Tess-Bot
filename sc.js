const Discord = require("discord.js");
const fs = require("fs");
const client = new Discord.Client();
let p = "tess!"
let id2 = '<@405258156063850497>'
//client.count = require("./count.json")


function emoji (id) {
return client.emojis.get(id).toString();
} 

client.on('ready', () => {



class Reminder 
{ 
  constructor(timeString, callback)
  {
       this.remindHandler = callback;
       let timeArray = timeString.split(':');
       this.hours = parseInt(timeArray[0]);
       this.minutes = parseInt(timeArray [1]);
       this.updateTimer();
}

updateTimer()
{
    let now = new Date();

   let remindTime = new Date();
   remindTime.setHours(this.hours);
   remindTime.setMinutes(this.minutes);

   if(now.getTime() == remindTime.getTime()) this.remindHandler();
   if(now >= remindTime ) remindTime.setDate(remindTime.getDate() + 1);

console.log('time to reminder: ' + (remindTime - now));

setTimeout(this.updateTimer.bind(this), remindTime - now);
}
}
//9:15
let reminder = new Reminder('9:15', () => {

client.fetchWebhook('620966467994779658', 'g-yVItRDXMdx1TkfhsGIU3f6WYUy8R-OsU6MDe82I4WqQsTnx4q8bG1R3ll27mdnHdAX').then(webhook => {
			webhook.send("@everyone, –¥–æ –º–∏—Ä–æ–≤–æ–≥–æ –±–æ—Å—Å–∞ –æ—Å—Ç–∞–ª–æ—Å—å 15 –º–∏–Ω—É—Ç. –ù–µ –æ–≥–æ—Ä—á–∞–π—Ç–µ –∏ –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–∞–¥—à—É—é –ø–ª–∞–∫–∞—Ç—å, –∑–∞–π–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞" + emoji("583194072190156811"))
 });


});

            setInterval(() => {
                


                 client.user.setActivity("–Ω–∞ –≤—Ä–µ–º—è –ø–æ –º—Å–∫ - " + new Date().toLocaleTimeString('ru', {
        timeZone: 'Europe/Moscow',
hour: 'numeric',
hour12: false ,
minute: 'numeric',
second: 'numeric',
    }), {
                    type: 'WATCHING'
                
           })
            }, 5000)
        
        });
        


client.on('message', message => {
	if(message.content.startsWith(p + 'avatar')) {
try {
let mentions1 = message.mentions
		const embed = new Discord.RichEmbed()
		.setTitle('–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
            .setColor('RANDOM')
		 .setImage(message.mentions.users.first().avatarURL)
		 message.channel.send({embed})
		console.log(`–ø–æ–∫–∞–∑–∞–ª –∞–≤–∞—Ç–∞—Ä ${mentions1[0]} –¥–ª—è ${message.author.displayName} –≤ ${message.guild.name}`)
} catch (err) {
message.channel.send('–¢—ã —É–≤–µ—Ä–µ–Ω —á—Ç–æ —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫ –∏–º–µ–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É?')
		}
	}
});
/*
client.on("message",(message) =>

	{  

	    if(message.content.startsWith(p + 'inv')) {
                 message.delete()
	    {
	        message.channel.createInvite({temporary : true})

	       .then(inv =>message.channel.sendMessage (`https://discord.gg/${inv.code} `));                   

	    }
}
	});
*/
	 

client.on("messageDelete", (msg) => {	
  if (typeof msg.content !== 'undefined'){	
    let date = new Date(msg.timestamp);	
    if (typeof msg.attachments[0] !== 'undefined'){	
	console.log('–ö–∏–Ω—É–ª –≤ –ª—Å —É–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')	
      client.channels.get("674482419415515146").send(`–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${msg.author.username}, –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ ${date.toUTCString()}: "${msg.content}". –ö —Å–æ–æ–±—â–µ–Ω–∏—é –±—ã–ª–æ —á—Ç–æ-—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ.`);	
    } else {	
      client.channels.get("674482419415515146").send(`–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${msg.author.username}, –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ ${date.toUTCString()}: "${msg.content}".`);	
    };	
  } else {	
    client.channels.get("674482419415515146").send("–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.");	
  };	
});                                    


client.on('message', message => {
     msg = message.content.toLowerCase();

if(message.author.bot) return;

mention = message.mentions.users.first();

         if(msg.startsWith (p + "send")) {
           if (mention == null) { return; }
           message.delete();
           mentionMessage = message.content.slice (10);
           mention.sendMessage (mentionMessage);
           message.channel.send("done!")

}
/*
if(msg.includes( emoji("583194072190156811"))) {
let emojiCounter = client.count["counter"].sadEmoji;
client.count ["counter"] = {
sadEmoji: emojiCounter + 1
}
fs.writeFile ("./count.json", JSON.stringify (client.count, null, 4), err => {
if (err) throw err;
message.channel.send("emoji counted")

});

 }
*/
  });

client.on('message', message => {
	if(message.content === (p + 'logo')) {
try {
	const embed = new Discord.RichEmbed()
		.setTitle('–õ–æ–≥–æ—Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞')
            .setColor('RANDOM')
		.setImage(message.guild.iconURL)
		 message.channel.send({embed})
		console.log(`–ø–æ–∫–∞–∑–∞–ª –ª–æ–≥–æ—Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞ ${message.guild.name} –¥–ª—è ${message.author.displayName}`)
} catch (err) {
message.channel.send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∫—Ä–∞—à–Ω—É—Ç—å –±–æ—Ç–∞ :D')
		}
	}
});

client.on('message', message => {
    if(message.content.startsWith(p + 'afk on')) {
        const embed = new Discord.RichEmbed()
            .setTitle("AFK")
            .setColor("#00BFFF")
            .setDescription('–í–æ—à(–µ)–ª(–∞) –≤ AFK,–Ω–µ –º–µ—à–∞–π—Ç–µ.')
            .setFooter("AFK|Tess bot")
            .setTimestamp();
            message.reply({embed}).then(sentMessage => {
                sentMessage.react('üîú')    
                    .catch(() => console.error('One of the emojis failed to react1.'));
            });
            }
});
 
    client.on('message', message => {
        if(message.content.startsWith(p + 'afk off')) {
            const embed = new Discord.RichEmbed()
                .setTitle("AFK")
                .setColor("#00BFFF")
                .setDescription('–í—ã—à(–µ)–ª(–∞) –∏–∑ AFK,—Ç–µ–ø–µ—Ä—å –æ–Ω(–∞) —Å –Ω–∞–º–∏.')
                .setFooter("AFK|Tess bot")
                .setTimestamp();
                message.reply({embed}).then(sentMessage => {
                    sentMessage.react('üîô')
                });     
            }
        });

client.on('message', message => {
    if(message.content.startsWith(p + 'help')) {
        const embed = new Discord.RichEmbed()
            .setTitle("–ü–æ–º–æ—â—å")
            .setColor("#00BFFF")
            .setDescription('–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã \n **tess!help** - –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ \n **tess!afk on** - –≤–æ–π—Ç–∏ –≤ AFK \n **tess!afk off** - –≤—ã–π—Ç–∏ –∏–∑ AFK \n **tess!logo** - —Å—Ç—ã—Ä–∏—Ç—å –ª–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ \n **tess!avatar (@user)** - —Å—Ç—ã—Ä–∏—Ç—å –∞–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n **tess!invitebot** - –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –∫ —Å–µ–±–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä \n **tess!send (@user) (message)** - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–æ–º–∞–Ω–¥–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞—è, –Ω–æ –∏–≥—Ä–∞—Ç—å—Å—è –º–æ–∂–Ω–æ) \n **tess!say (message)** - –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ \n **tess!burn (@user)** - —Å–∂–µ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n \n ***–≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç.–∫ –∞–≤—Ç–æ—Ä –ª–µ–Ω–∏–≤–∞—è –∂–æ–ø–∞***')
            .setFooter("Tess bot")
            .setTimestamp();
    message.channel.send({embed}).then(sentMessage => {   
            sentMessage.react('üá≠')
                .then(() => sentMessage.react('üá™'))
                    .then(() => sentMessage.react('üá±'))
                    .then(() => sentMessage.react('üáµ'))
                    
                    .catch(console.error)
           
        });
      

    }
});


client.on('message', message => {
if(message.content.includes(p + "invitebot")) {
const embed = new Discord.RichEmbed()
            .setTitle("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")
            .setColor("#00BFFF")
            .setDescription('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n https://discordapp.com/api/oauth2/authorize?client_id=466896060682469377&permissions=8&scope=bot\n –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n https://discordapp.com/api/oauth2/authorize?client_id=466896060682469377&permissions=0&scope=bot')
            .setFooter("Tess bot")
            .setTimestamp();
    message.channel.send({embed})
    .catch(console.error)
}
});

client.on('message', message => {
   if(message.content.startsWith(p + "say")) {
      message.delete();
      saymessage = message.content.slice (9)
      message.channel.send(saymessage)
      authormessage = message.author.username
      let sayschannel = client.channels.get("683171550006214728")
      sayschannel.send(authormessage + " –Ω–∞–ø–∏—Å–∞–ª –∫–æ–º–∞–Ω–¥–æ–π: " + saymessage)
      .catch(console.error)

 }

mentionuser = message.mentions.users.first();
   if(message.content.startsWith(p + "burn")) {
     if (mentionuser == null) { return; }
     numberfire = 3
     fireNumber = Math.floor (Math.random() * (numberfire - 1 + 1))+1;
     firemember = message.author
     firedelay = message.content.slice (10)
     message.channel.send(firemember + " —Å–∂–µ–≥(—Å–æ–∂–≥–ª–∞) " + firedelay, { files: ["./images/burn/" + fireNumber + ".gif"]} )

  }
  
   if(message.content.startsWith(p + "sex")) {
     if (mentionuser == null) { return; }
     if (message.channel.nsfw == false) { return message.channel.send("–†–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å nsfw") }

     hentairand = Math.floor(Math.random() * 2) + 1;
     if (hentairand == 1) {
     hentaiCount = 9
     hentaiNumber = Math.floor (Math.random() * (hentaiCount - 1 + 1))+1;
     hentaimember = message.author
     hentaidelay = message.content.slice (9)
     message.channel.send(hentaimember + " –æ—Ç—Ö–µ–Ω—Ç–∞–∏–ª(–∞) " + hentaidelay, { files: ["./images/hentai/" + hentaiNumber + ".gif"]} )
     .catch(console.error)

     }

   if (hentairand == 2) {
     hentaiCount2 = 9
     hentaimember2 = message.author
     hentaiNumber2 = Math.floor (Math.random() * (hentaiCount2 - 1 + 1))+1;
     hentaidelay2 = message.content.slice (9)
     message.channel.send(hentaimember2 + " –æ—Ç—Ö–µ–Ω—Ç–∞–∏–ª(–∞) " + hentaidelay2, { files: ["./images/hentai2/" + hentaiNumber2 + ".gif"]} )
     .catch(console.error)
  }
 }
    

    

    if(message.content.startsWith(p + "clear")) {
      message.delete()
try {
     delmsg = message.content.slice (11) 
     message.channel.bulkDelete(delmsg).then(() => {
  message.channel.send("Deleted " + delmsg + " messages.").then(msg => msg.delete(3000));

   });
} catch(err) {
 message.channel.send("–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —É–∫–∞–∑–∞–ª–∏ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è?")
 }
  }
 
if(message.content.startsWith(p + "say2")) {
      message.delete();
      saymessage2 = message.content.slice (10)
      
      
      let sayschannel2 = client.channels.get("677796816678551583")
      sayschannel2.send(saymessage2)
      .catch(console.error)

 }

   
   if(message.content.startsWith(p + "kick")) {
    message.delete()
    let kickmem2 = message.mentions.users.first()
    let kickmem = message.content.slice(10).split("|")
   message.channel.send(kickmem2 + " –∂–µ—Å—Ç–æ–∫–æ —É–¥–∞—Ä–∏–ª —Å –Ω–æ–≥–∏ " + kickmem[1])
}

}); 

client.login(process.env.BOT_SECRET);
